{"path":".obsidian/plugins/text-extractor/cache/c4/excalidraw-c4model-c4-docs-png-16df09881257d0fc050286e54ff51abf.json","text":"As team, agree upon a st of absracionsyou will use to communicae software rchecture. e “CA model 15 ahirarchcl wey t thik about the sa tructures ot software system n terms f conainers, componants and dasses (or coder nsftwaresystemi made p of oo o mre contlners b aplkators, bl 305, oy speaons, St ey e ot i ot o e ompenta i are oot o o vt et ot Visualis this hrarchy by creatinga collecton of System Context, Contaner,Component and (optionally) UML class diagrams. Think about these diagrams as maps of your Cefware, showng diferen vt of deta Level 1: System Context Level 2: Containers Level 3: Components Level1: System Context | Level2 Containers |, Level 3 Components e e e T e Wt LT e U b AmimtsiEene Shimbiiome. mESEoeeames ST SmEnEeRe S S ae Sebmmilans. Soimieene RO, S e e Al T o e e o ) Sttt SEEnaeioie Smide EEETEESE TR A commen et of abstractionsis more Important than a comman ntation, but o ensure thoyour notation (hapes,calours, Ine Sues, ctonyms, et makes sense. i doubt, 2082 dlgram keylegond, over e, g ML Use the elements inyour model f th sate strueureto eeate adeitional supplementary igrams n rder to communicate runtime behaviour and deplayment (ihe moppng of Contaners to mrastuetore). “Software Architecture for Developers i e m m 0 structurizr I e [ W","libVersion":"0.0.0","langs":"eng","hash":"","size":0}